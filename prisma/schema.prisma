generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model client {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?  @db.VarChar(255)
  address      String?  @db.VarChar(255)
  phone_number String?  @db.VarChar(255)
  email        String?  @db.VarChar(255)
  name         String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user_id      String   @db.Uuid
  tenant_id    String   @db.VarChar(255)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model finance {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  budget     Int
  expenses   Int
  income     Int
  balance    Int
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model membership {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  membership_type String   @db.VarChar(255)
  start_date      DateTime @db.Timestamp(6)
  end_date        DateTime @db.Timestamp(6)
  user_id         String   @db.Uuid
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  user            user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ngo {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(255)
  description  String?  @db.VarChar(255)
  address      String   @db.VarChar(255)
  phone_number String   @db.VarChar(255)
  email        String   @db.VarChar(255)
  user_id      String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount         Int
  payment_date   DateTime @db.Timestamp(6)
  payment_method String   @db.VarChar(255)
  user_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  client      client[]
  finance     finance[]
  membership  membership[]
  ngo         ngo[]
  payment     payment[]
}
